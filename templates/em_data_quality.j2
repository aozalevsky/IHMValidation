{% from "macro.html" import format_value, format_help, format_emdb_help, insert_json_plot, insert_json_or_svg_plot with context %}
{% if enable_em and em_present %}
  <div class="card-body border-success" style="border-color: solid black;">
    <!-- start overall card body for front page -->
    <div class="card-header" style="background-color: #FFF;">
      <!-- Data quality header -->
      <div class="row">
        <div class="col-lg-12">
          <h4 class= ex2 align= center>
            <u><a id=3dem>3DEM</a></u>
          </h4>
          <p align=justify>
            <em>
              This section describes quality of the 3DEM datasets
            </em>
          </p>
          {% if em_data_quality is not none and em_data_quality|length > 0 %}
            {% for data in em_data_quality %}
              <div id={{ data["emdbid"] }} style="margin-top: 2em;">
                <h5 class= ex2 align= center>
                  <u><a href=https://emdb-empiar.org/{{ data["emdbid"] }}>{{ data["emdbid"] }}</a></u>
                </h5>
                <div>
                  <table class='table'>
                    <tr>
                      <td>EM reconstruction method:</td>
                      <td>{{ data["data_stats"]["reconstruction_method"] }}</td>
                    </tr>
                    <tr>
                      <td>Resolution:</td>
                      <td>{{ format_value(data["data_stats"]["resolution"]) }} {{ "Å" if data["data_stats"]["resolution"] is not none }}</td>
                    </tr>
                    <tr>
                      <td>Recommended level:</td>
                      <td>{{ format_value(data["data_stats"]["recommended_level"], num_digits=3) }}</td>
                    </tr>
                    <tr>
                      <td>Estimated volume:</td>
                      <td>{{ format_value(data["data_stats"]["estimated_volume"]) }} {{ "nm³" if data["data_stats"]["resolution"] is not none }}</td>
                    </tr>
                    <tr>
                      <td>Specimen preparation:</td>
                      <td style="padding-left: 0">
                        <table>
                          {% for data_ in data["data_stats"]["specimen_preparation_list"] %}
                            <tr>
                              <td style="border-top: none !important; margin-top: 0; padding-top: 0; margin-bottom: 0; padding-bottom: 0;">Preparation ID</td>
                              <td style="border-top: none !important; margin-top: 0; padding-top: 0; margin-bottom: 0; padding-bottom: 0;">{{ data_['preparation_id'] }}</td>
                              <td style="border-top: none !important; margin-top: 0; padding-top: 0; margin-bottom: 0; padding-bottom: 0;">
                                {% if 'staining' in data_ %}
                                  Staining: {{ data_['staining']['type_'] }}; Material: {{ data_['staining']['material'] }}
                                {% elif 'vitrification' in data_ %}
                                  Vitrification
                                {% else %}
                                  Other
                                {% endif %}
                              </td>
                            </tr>
                          {% endfor %}
                        </table>
                      </td>
                    </tr>
                    <tr>
                      <td>Map-only validation report:</td>
                      <td><a target="_blank" rel="noopener noreferrer" href=https://ftp.ebi.ac.uk/pub/databases/emdb/validation_reports/EMD-{{ data["emdbid_"] }}/emd_{{ data["emdbid_"] }}_validation.pdf.gz>wwPDB validation report<a></td>
                    </tr>
                  </table>
                </div>
                
                <h6 align= center>
                  <u>Map visualisation</u>{{ format_emdb_help("map_visualisation", current_task) }}
                </h6>
                <p>
                  This section contains visualisations of the EMDB entry {{ data["emdbid"] }}. These allow visual inspection
                  of the internal detail of the map and identification of artifacts.
               
                  Images derived from a raw map, generated by summing the deposited half-maps, are presented
                  below the corresponding image components of the primary map to allow further visual inspection
                  and comparison with those of the primary map.
                </p>
               
                {% if 'map_proj' in data["data_plots"] %}
                  <h6 align=center>
                    <u>Orthogonal projections</u>{{ format_emdb_help("orthogonal_projections", current_task) }}
                  </h6>
                
                  <h6 align=center>
                    <u>Primary map</u>
                  </h6>
                  <div align=center>
                    <table style="page-break-inside: avoid;">
                      <tr>
                        {% for k, v in data["data_plots"]["map_proj"].items() %}
                          <td align=center>
                            <div style="width: 250px; height: 250px; z-index: 1000; position: relative;" align=center>
                              <img src="data:image/jpeg;base64, {{ v }}" style="max-height: 100%; max-width: 100%">
                            </div>
                          </td>
                        {% endfor %}
                      </tr>
                      <tr>
                        {% for k, v in data["data_plots"]["map_proj"].items() %}
                          <td align=center>
                            <b>{{ k }}</b>
                          </td>
                        {% endfor %}
                      </tr>
                    </table> 
                  </div>
                  
                  {% if 'rawmap_proj' in data["data_plots"] %}
                    <h6 align=center>
                      <u>Raw map</u>
                    </h6>
                    <div align=center>
                      <table style="page-break-inside: avoid;">
                        <tr>
                          {% for k, v in data["data_plots"]["rawmap_proj"].items() %}
                            <td>
                              <div class="d-flex align-items-center justify-content-center" style="width: 250px; height: 250px; z-index: 1000; position: relative;" align=center>
                                <img src="data:image/jpeg;base64, {{ v }}" style="max-height: 100%; max-width: 100%">
                              </div>
                            </td>
                          {% endfor %}
                        </tr>
                        <tr>
                          {% for k, v in data["data_plots"]["rawmap_proj"].items() %}
                            <td align=center>
                              <b>{{ k }}</b>
                            </td>
                          {% endfor %}
                        </tr>
                      </table> 
                    </div>
                  {% endif %}
                  
                  <p>The images above show the map projected in three orthogonal directions.</p>
                {% endif %}
               
                {% if "map_central_slice" in data["data_plots"] %}
                  <h6 align=center>
                    <u>Central slices</u>{{ format_emdb_help("central_slices", current_task) }}
                  </h6>
                
                  <h6 align=center>
                    <u>Primary map</u>
                  </h6>
                  <div align=center>
                    <table style="page-break-inside: avoid;">
                      <tr>
                        {% for k, v in data["data_plots"]["map_central_slice"].items() %}
                          <td>
                            <div class="d-flex align-items-center justify-content-center" style="width: 250px; height: 250px; z-index: 1000; position: relative;" align=center>
                              <img src="data:image/jpeg;base64, {{ v }}" style="max-height: 100%; max-width: 100%">
                            </div>
                          </td>
                        {% endfor %}
                      </tr>
                      <tr>
                        {% for k, v in data["data_plots"]["map_central_slice"].items() %}
                          <td align=center>
                            <b>{{ k }}</b>
                          </td>
                        {% endfor %}
                      </tr>
                    </table> 
                  </div>
                  
                  {% if 'rawmap_central_slice' in data["data_plots"] %}
                    <h6 align=center>
                      <u>Raw map</u>
                    </h6>
                    <div align=center>
                      <table style="page-break-inside: avoid;">
                        <tr>
                          {% for k, v in data["data_plots"]["rawmap_central_slice"].items() %}
                            <td>
                              <div class="d-flex align-items-center justify-content-center" style="width: 250px; height: 250px; z-index: 1000; position: relative;" align=center>
                                <img src="data:image/jpeg;base64, {{ v }}" style="max-height: 100%; max-width: 100%">
                              </div>
                            </td>
                          {% endfor %}
                        </tr>
                        <tr>
                          {% for k, v in data["data_plots"]["rawmap_central_slice"].items() %}
                            <td align=center>
                              <b>{{ k }}</b>
                            </td>
                          {% endfor %}
                        </tr>
                      </table> 
                    </div>
                  {% endif %}
                  
                  <p>The images above show central slices of the map in three orthogonal directions.</p>
                {% endif %}
                
                {% if "map_largest_variance_slice" in data["data_plots"] %}
                  <h6 align=center>
                    <u>Largest variance slices</u>{{ format_emdb_help("largest_variance_slices", current_task) }}
                  </h6>
                
                  <h6 align=center>
                    <u>Primary map</u>
                  </h6>
                  <div align=center>
                    <table style="page-break-inside: avoid;">
                      <tr>
                        {% for k, v in data["data_plots"]["map_largest_variance_slice"].items() %}
                          <td>
                            <div class="d-flex align-items-center justify-content-center" style="width: 250px; height: 250px; z-index: 1000; position: relative;" align=center>
                              <img src="data:image/jpeg;base64, {{ v }}" style="max-height: 100%; max-width: 100%">
                            </div>
                          </td>
                        {% endfor %}
                      </tr>
                      <tr>
                        {% for k, v in data["data_plots"]["map_largest_variance_slice"].items() %}
                          <td align=center>
                            <b>{{ k }}</b>
                          </td>
                        {% endfor %}
                      </tr>
                    </table> 
                  </div>
                  
                  {% if 'rawmap_largest_variance_slice' in data["data_plots"] %}
                    <h6 align=center>
                      <u>Raw map</u>
                    </h6>
                    <div align=center>
                      <table style="page-break-inside: avoid;">
                        <tr>
                          {% for k, v in data["data_plots"]["rawmap_largest_variance_slice"].items() %}
                            <td>
                              <div class="d-flex align-items-center justify-content-center" style="width: 250px; height: 250px; z-index: 1000; position: relative;" align=center>
                                <img src="data:image/jpeg;base64, {{ v }}" style="max-height: 100%; max-width: 100%">
                              </div>
                            </td>
                          {% endfor %}
                        </tr>
                        <tr>
                          {% for k, v in data["data_plots"]["rawmap_largest_variance_slice"].items() %}
                            <td align=center>
                              <b>{{ k }}</b>
                            </td>
                          {% endfor %}
                        </tr>
                      </table> 
                    </div>
                  {% endif %}
                  
                  <p>The images above show the largest variance slices of the map in three orthogonal directions.</p>
                {% endif %}
               
                {% if 'map_glow_std' in data["data_plots"] %}
                  <h6 align= center>
                    <u>Orthogonal standard-deviation projections (false-color)</u>{{ format_emdb_help("orthogonal_glow_std", current_task) }}
                  </h6>
                  
                  <h6 align=center>
                    <u>Primary map</u>
                  </h6>
                  <div align=center>
                    <table style="page-break-inside: avoid;">
                      <tr>
                        {% for k, v in data["data_plots"]["map_glow_std"].items() %}
                          <td>
                            <div class="d-flex align-items-center justify-content-center" style="width: 250px; height: 250px; z-index: 1000; position: relative;" align=center>
                              <img src="data:image/jpeg;base64, {{ v }}" style="max-height: 100%; max-width: 100%">
                            </div>
                          </td>
                        {% endfor %}
                      </tr>
                      <tr>
                        {% for k, v in data["data_plots"]["map_glow_std"].items() %}
                          <td align=center>
                            <b>{{ k }}</b>
                          </td>
                        {% endfor %}
                      </tr>
                    </table> 
                  </div>
                  
                  {% if 'rawmap_glow_std' in data["data_plots"] %}
                    <h6 align= center>
                      <u>Raw map</u>
                    </h6>
                    <div align=center>
                      <table style="page-break-inside: avoid;">
                        <tr>
                          {% for k, v in data["data_plots"]["rawmap_glow_std"].items() %}
                            <td>
                              <div class="d-flex align-items-center justify-content-center" style="width: 250px; height: 250px; z-index: 1000; position: relative;" align=center>
                                <img src="data:image/jpeg;base64, {{ v }}" style="max-height: 100%; max-width: 100%">
                              </div>
                            </td>
                          {% endfor %}
                        </tr>
                        <tr>
                          {% for k, v in data["data_plots"]["rawmap_glow_std"].items() %}
                            <td align=center>
                              <b>{{ k }}</b>
                            </td>
                          {% endfor %}
                        </tr>
                      </table> 
                    </div>
                  {% endif %}
                
                  <p>
                    The images above show the map standard deviation projections with false color in three orthogonal
                    directions. Minimum values are shown in green, max in blue, and dark to light orange shades
                    represent small to large values respectively.
                  </p>
                {% endif %}
                
                {% if ("map_surface" in data["data_plots"]) and (data["data_stats"]["recommended_level"] is not none) %}
                  <h6 align=center>
                    <u>Orthogonal surface views</u>{{ format_emdb_help("orthogonal_projections", current_task) }}
                  </h6>
                  
                  <h6 align=center>
                    <u>Primary map</u>
                  </h6>
                  <div align=center>
                    <table style="page-break-inside: avoid;">
                      <tr>
                        {% for k, v in data["data_plots"]["map_surface"].items() %}
                          <td>
                            <div class="d-flex align-items-center justify-content-center" style="width: 250px; height: 250px; z-index: 1000; position: relative;" align=center>
                              <img src="data:image/jpeg;base64, {{ v }}" style="max-height: 100%; max-width: 100%">
                            </div>
                          </td>
                        {% endfor %}
                      </tr>
                      <tr>
                        {% for k, v in data["data_plots"]["map_surface"].items() %}
                          <td align=center>
                            <b>{{ k }}</b>
                          </td>
                        {% endfor %}
                      </tr>
                    </table> 
                  </div>
                
                  <p>
                    The images above show the 3D surface view of the map at the recommended contour level {{ format_value(data["data_stats"]["recommended_level"], num_digits=3) }}.
                    These images, in conjunction with the slice images, may facilitate assessment of whether an appropriate contour level has been provided.
                  <p>
                  
                  {% if 'rawmap_surface' in data["data_plots"] %}
                    <h6 align= center>
                      <u>Raw map</u>
                    </h6>
                    <div align=center>
                      <table style="page-break-inside: avoid;">
                        <tr>
                          {% for k, v in data["data_plots"]["rawmap_surface"].items() %}
                            <td>
                              <div class="d-flex align-items-center justify-content-center" style="width: 250px; height: 250px; z-index: 1000; position: relative;" align=center>
                                <img src="data:image/jpeg;base64, {{ v }}" style="max-height: 100%; max-width: 100%">
                              </div>
                            </td>
                          {% endfor %}
                        </tr>
                        <tr>
                          {% for k, v in data["data_plots"]["rawmap_surface"].items() %}
                            <td align=center>
                              <b>{{ k }}</b>
                            </td>
                          {% endfor %}
                        </tr>
                      </table> 
                    </div>
                  
                    <p>
                      These images show the 3D surface of the raw map. The raw map’s contour level {{ format_value(data["data_stats"]["rawmap_recommended_level"], num_digits=3) }} was selected so
                      that its surface encloses the same volume as the primary map does at its recommended contour level.
                    <p>
                  {% endif %}
                {% endif %}
                
                {% if 'masks' in data["data_plots"] %}
                  <h6 align=center>
                    <u>Mask visualisation</u>{{ format_emdb_help("masks", current_task) }}
                  </h6>
               
                  <p>
                    This section shows the 3D surface view of the primary map at 50% transparency overlaid with the specified mask at 0% transparency. 
                  
                    A mask typically either:
                    <ul>
                      <li>Encompasses the whole structure;
                      <li>Separates out a domain, a functional unit, a monomer or an area of interest from a larger structure.
                    </ul>
                  </p>
              
                  {% for mask, plots in data["data_plots"]['masks'].items() %} 
                    <h6 align=center>
                      <u>{{ mask }}</u>{{ format_emdb_help("masks", current_task) }}
                    </h6>
                    <div align=center>
                      <table style="page-break-inside: avoid;">
                        <tr>
                          {% for k, v in plots.items() %}
                            <td>
                              <div class="d-flex align-items-center justify-content-center" style="width: 250px; height: 250px; z-index: 1000; position: relative;" align=center>
                                <img src="data:image/jpeg;base64, {{ v }}" style="max-height: 100%; max-width: 100%">
                              </div>
                            </td>
                          {% endfor %}
                        </tr>
                        <tr>
                          {% for k, v in plots.items() %}
                            <td align=center>
                              <b>{{ k }}</b>
                            </td>
                          {% endfor %}
                        </tr>
                      </table> 
                    </div>
                  {% endfor %}
                {% endif %}
               
                <h6 align=center>
                  <u>Map analysis</u>{{ format_emdb_help("map_analysis", current_task) }}
                </h6>
                <em>This section contains the results of statistical analysis of the map.</em>
                  
                {% if data["data_stats_plots"]|length > 0 %}
                  {% set plot_name = data["emdbid"] ~ "_" ~ "voxel" %}
                  {% if plot_name in data["data_stats_plots"] %}
                    <h6 align= center>
                      <u>Map-value distribution</u>{{ format_emdb_help("map_value_distribution", current_task) }}
                    </h6>
                    <div align=center>
                      {{ insert_json_or_svg_plot(plot_name, current_task) }}
                      <p>The map-value distribution is plotted in 128 intervals along the x-axis. The y-axis is logarithmic. A spike in this graph at zero usually indicates that the volume has been masked.</p>
                    </div>
                  {% endif %}
                  
                  {% set plot_name = data["emdbid"] ~ "_" ~ "volume" %}
                  {% if plot_name in data["data_stats_plots"] %}
                    <h6 align= center>
                      <u>Volume estimate</u>{{ format_emdb_help("volume_estimate", current_task) }}
                    </h6>
                    <div align=center>
                      {{ insert_json_or_svg_plot(plot_name, current_task) }}
                      
                      <p>The volume at the recommended contour level is {{ format_value(data["data_stats"]["estimated_volume"]) }} nm³.</p>
                      <!-- ; this corresponds to an approximate mass of 64 kDa. -->
                   
                      <p>
                        The volume estimate graph shows how the enclosed volume varies with the contour level. The
                        recommended contour level is shown as a vertical line and the intersection between the line and
                        the curve gives the volume of the enclosed surface at the given level.
                      </p>
                    </div>
                  {% endif %}
                   
                  {% set plot_name = data["emdbid"] ~ "_" ~ "raps" %}
                  {% if plot_name in data["data_stats_plots"] %}
                    <h6 align= center>
                      <u>Rotationally averaged power spectrum</u>{{ format_emdb_help("raps", current_task) }}
                    </h6>
                    <div align=center>
                      {{ insert_json_or_svg_plot(plot_name, current_task) }}
                      <p>*Reported resolution corresponds to spatial frequency of {{ format_value(1 / data["data_stats"]["resolution"], num_digits=3) }} Å⁻¹</p>
                    </div>
                  {% endif %}
                    
                  {% set plot_name = data["emdbid"] ~ "_" ~ "fsc" %}
                  {% if plot_name in data["data_stats_plots"] or data['data_stats']['resolution_estimates'] is not none %}
                    <h6 align= center>
                      <u>Fourier-Shell correlation</u>{{ format_emdb_help("fsc_validation", current_task) }}
                    </h6>
                      
                    {% if plot_name in data["data_stats_plots"] %}
                      <h6 align= center>
                        <u>FSC</u>{{ format_emdb_help("fsc_validation", current_task) }}
                      </h6>
                      <div>
                        Fourier-Shell Correlation (FSC) is the most commonly used method to estimate the resolution of
                        single-particle and subtomogram-averaged maps. The shape of the curve depends on the imposed
                        symmetry, mask and whether or not the two 3D reconstructions used were processed from a
                        common reference. The reported resolution is shown as a black line. A curve is displayed for the
                        half-bit criterion in addition to lines showing the 0.143 gold standard cut-off and 0.5 cut-off.
                        <div align=center> 
                          {{ insert_json_or_svg_plot(plot_name, current_task) }}
                          <p>*Reported resolution corresponds to spatial frequency of {{ format_value(1 / data["data_stats"]["resolution"], num_digits=3) }} Å⁻¹</p>
                        </div>
                      </div>
                    {% endif %}
                    
                    {% if data['data_stats']['resolution_estimates'] is not none %}
                      <h6 align= center>
                        <u>Resolution estimates</u>{{ format_emdb_help("resolution_estimates", current_task) }}
                      </h6>
                     
                      <div align=center>
                        <table class='table table-bordered' style="border: 1px solid black">
                          <thead>
                            <tr>
                              <th rowspan=2 class='text-center' style='vertical-align:middle'>Resolution estimate (Å)</th>
                              <th colspan={{ data['data_stats']['resolution_estimates'].values()|list|first|items|list|length }} class='text-center'>Estimation criterion (FSC cut-off)</th>
                            </tr>
                            <tr>
                              {% for k, v in data['data_stats']['resolution_estimates'].values()|list|first|items %}
                                <th>{{ k }}</th>
                              {% endfor %}
                            </tr>
                          </thead>
                          <tbody>
                            {% for k, v in data['data_stats']['resolution_estimates'].items() %}
                              <tr>
                                <td>{{ k }}</td>
                                {% for vv in v.values() %}
                                  <td>{{ vv }}</td>
                                {% endfor %}
                              </tr>
                            {% endfor %}
                          </tbody>
                        </table> 
                      </div>
                      
                      {% if data['data_stats']['resolution_estimates_comments']['general'] is not none %}
                        <p>{{ data['data_stats']['resolution_estimates_comments']['general'] }}</p>
                      {% endif %}
                      
                      {% if data['data_stats']['resolution_estimates_comments']['fsc'] is not none %}
                        <p>{{ data['data_stats']['resolution_estimates_comments']['fsc'] }}</p>
                      {% endif %}
                    {% endif %}
                  {% endif %}
                {% else %}
                  <p>Statistical analysis of the map is not available.<p>
                {% endif %}
              </div>
            {% endfor %}
          {% else %}
            <p>3DEM dataset is not available in the <a href=https://emdb-empiar.org>EMDB</a> database.</p>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
{% endif %}
